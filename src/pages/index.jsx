import Head from "next/head";
import { useEffect, useState } from "react";
import axios from "axios";

import Loading from "../components/Loading/Loading";
import Modal from "../components/Modal/Modal";
import CharacterList from "../components/CharacterList/CharacterList";

import styles from "./index.module.css";




export default function Home() {
  const [characters, setCharacters] = useState([]);
  const [search, setSearch] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [openModal, setOpenModal] = useState(false);
  const [selectedCharacter, setSelectedCharacter] = useState(null);

  useEffect(() => {
    CharactersListLoad();
  }, []);

  async function CharactersListLoad() {
    setIsLoading(true);

    let page = "https://swapi.dev/api/people/";

    let characters = [];

    while (page) {
      await axios.get(page).then((response) => {
        const nextPage = response.data.next;
        const results = response.data.results;
        page = nextPage;

        characters = [...characters, ...results];
      });
    }

    setIsLoading(false);
    setCharacters(characters);
  }

  const handleOpenModal = () => {
    setOpenModal(true);
  };

  const handleCloseModal = () => {
    setOpenModal(false);
  };

  const handleSelectedCharacter = (character) => {
    setSelectedCharacter(character);
  };

  return (
    <>
      <Head>
        <title>Star Wars</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <div className={styles.container}>
        <img src="starwarslogo.png" alt="Star Wars" />
        <span>
          <div className={styles.searchBoxContainer}>
            <input
              type="text"
              placeholder="Procurar personagem..."
              onChange={(ev) => setSearch(ev.target.value)}
              value={search}
            />
          </div>
        </span>
      </div>
      {isLoading ? (
        <Loading />
      ) : (
        <div className={styles.containerList}>
          {characters.map((character) => {
            return (
              character.name?.toLowerCase().match(search.toLowerCase()) && (
                <CharacterList
                  key={character.name}
                  character={character}
                  setModalIsOpen={handleOpenModal}
                  setSelectedCharacter={handleSelectedCharacter}
                />
              )
            );
          })}
        </div>
      )}
      {openModal ? (
        <Modal
          isOpen={openModal}
          setModalIsClose={handleCloseModal}
          characterSelected={selectedCharacter}
        />
      ) : (
        ""
      )}
    </>
  );
}
